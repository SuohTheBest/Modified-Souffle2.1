// Souffle - A Datalog Compiler
// Copyright (c) 2020, The Souffle Developers. All rights reserved
// Licensed under the Universal Permissive License v 1.0 as shown at:
// - https://opensource.org/licenses/UPL
// - <souffle root>/licenses/SOUFFLE-UPL.txt

//
// type_system_records.dl
// Evaluating anonymous records.
//


// Some simple cases
.decl B(p: number)
B(a) :- [a] = [1]. // ok
B(a) :- [a, a, a] = [2, 2, 2], [3] = [3]. // ok
B(a) :- ["3", a] = ["3", 3]. // ok
B(a) :- [1, a] = [2, 4].
B(5) :- [1, "3", 5] != [2, "3", 5], [2] = [2]. // ok
B(6) :- [] != [], 1 = 1, 1 = 1.
B(7) :- [] = []. // ok


// Nested anonymous records
.decl C(x: number)
C(a) :- [[a]] = [[1]]. // ok
C(a) :- [[a, [a]]] = [[2, [2]]]. // ok
C(a) :- [[a, [a]]] = [[-1, [3]]].
C(4) :- [[[[[[1, 1.5, 3]]], "meow"]]] != [[[[[[1, 1, 3]]], "meow"]]]. // ok
C(5) :- [[[[[[1, 1.5, 3]]], "meow"]]] != [[[[[[1, 1.5, 3]]], "meow"]]].
C(6) :- [[[[[[1, 1.5, 3]]], "meow"]]] = [[[[[[1, 1.5, 3]]], "meow"]]]. // ok


// Multiple nested records,
.decl D(x: number)
D(a) :- [[a, [a]]] = [[2, [2]]],
        [[[[[[1, a, 3]]], "meow"]]] != [[[[[[1, 1, 3]]], "meow"]]],
        [[[[[[1, 1.5, 3]]], "meow"]]] = [[[[[[1, 1.5, 3]]], "meow"]]].


// Aliases.
.decl E(x: number)
E(b) :- a = [1, b], a = [1, 0]. // ok
E(1) :- a = [1, 1], a = [1, 1]. // ok
E(x) :- a = [2, 2], b = a,
        c = b, b = d,
        d = c, d = [2, x]. // ok
E(x) :- a = [2, 3], b = a,
        c = b, b = d,
        b != [3, 2],
        d = c, d = [2, x],
        c != [1, 2]. // ok
E(c) :- a = [1, [b, c]], [1, x] = a,
        x = [1, 4]. // ok
E(5) :- _ = [1]. // ok
E(6) :- [[_], 3] = [[[1]], 3]. // ok

.output B, C, D, E
